@using System.Text.Json;
@using static WebAppForMORecSys.Helpers.MovieHelper
@using static WebAppForMORecSys.Settings.SystemParameters
@model WebAppForMORecSys.Models.ViewModels.MainViewModel
@{
    ViewData["Title"] = "Home Page";
    string controller = WebAppForMORecSys.Settings.SystemParameters.Controller;
    int index = 0;
    Metric[] metricsArr = Model.Metrics.Keys.ToArray();
}

<div class="text-center">
    <h4 class="display-4">Students Score Details By Doughnut Chart</h4>
    <h3><a href="~/Home/Index">Back</a></h3>
    <div class="card">
        <div class="card-header">
            <div style="max-width:15%" class="chart">
                <canvas id="doughnutchart"></canvas>
            </div>
        </div>
    </div>
</div>

<script>
    var doughnutchartCanvas = document.getElementById("doughnutchart");
    var studentname = [];
    var score = [];
    @if (Model.Items.Count() > 0)
    {
        foreach (var item in Model.Items.Take(4))
        {
            @:studentname.push('@item.Name');
            @:score.push(1);
        }
    }
        var doughnutChart = new Chart(doughnutchartCanvas, {
            type: 'doughnut',
            data: {
                labels: studentname,
                datasets: [{
                    data: score,
                    borderWidth: 0,
                    backgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)',
                        'rgb(157, 230, 41)',
                        'rgb(41, 224, 230)',
                        'rgb(255, 255, 0)'
                    ],
                    hoverBackgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)',
                        'rgb(157, 230, 41)',
                        'rgb(41, 224, 230)',
                        'rgb(255, 255, 0)'
                    ]
                }]
            },
            options: {
                plugins: {
                responsive: true,
                
                legend: {
                    display:false,                    
                }
                }
                
            }
        });
</script>
<div id="mySidebar" class="sidebar">
    <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
    @await Html.PartialAsync("../"+controller+"/Filter")
</div>
<div id="main">
    <div id="openfilterbtn"><button id="openfilterbtn " class="openbtn" onclick="openNav()">&#9776; Open Filter</button></div>
    <div id="closefilterbtn" style="display:none"> <button class="openbtn" onclick="closeNav()">&#9776; Close Filter</button></div>
    <form asp-controller="Movies" asp-action="Index" method="get">
        <div class="form-floating mb-3">
            @await Html.PartialAsync("../Shared/Search")
            @await Html.PartialAsync("../Shared/MetricsFilter", Model.Metrics)
        </div>
    </form>
    <div id="DetailsDiv" style="margin-bottom:5px;"></div>
    <div id="Previews" style="width:100%">
    @foreach (var item in Model.Items)
    {
        Dictionary<Metric,int> metricsContribution =  null;
            
        if(Model.ItemsToMetricImportance!=null){
                metricsContribution = Enumerable.Range(0, Model.Metrics.Count)
                    .ToDictionary(i => metricsArr[i], i => Model.ItemsToMetricImportance[index][i]);
        }       
        
        @await Html.PartialAsync("../"+controller+"/Preview", new PreviewDetailViewModel(new Movie(item), Model.CurrentUser, Model.CurrentUserRatings, metricsContribution))
        @if (metricsContribution != null)
        {
                @await Html.PartialAsync("../Shared/Explanations", new PreviewDetailViewModel(new Movie(item), Model.CurrentUser, Model.CurrentUserRatings, metricsContribution))
        }
        index++;
    }
    </div>
    
</div>

<script>
    $(document).ready(function () {
        SetAutoComplete("titlesearch", "Movies/GetAllMovieNames");
        SetAutoComplete("idirector", "Movies/GetAllDirectors");
        SetAutoComplete("iactor", "Movies/GetAllActors");
        popoverExplanationOptions = {
            content: function () {
                var classname = '.popover-content' + this.id;
                return $(this).siblings(classname).html();
            },
            trigger: 'hover',
            animation: true,
            placement: 'top',
            html: true,
            title: 'Why is this item recommended?'
        };
        $('.ItemPreview').popover(popoverExplanationOptions);
    });



    $(document).ready(function () {
        $('[data-toggle="modal"]').modal({
            placement: 'top',
            trigger: 'hover'
        });
    });
</script>


@await Html.PartialAsync("../"+controller+"/Scripts")


