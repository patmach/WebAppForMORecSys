@model List<WebAppForMORecSys.Models.Metric>
@using WebAppForMORecSys.Settings
<div class="input-group" id="input-metrics-sliders-group">
    @{
        int index = 0;
        int averageValue = 100 / Model.Count;
    }
    @foreach (var metric in Model)
    {
        string id = "range" + index;        
        string valueAsNumber = id + ".valueAsNumber";
        <div class="range-wrap">
            <label for="@id">@metric.Name</label>
            @if (SystemParameters.MetricsView == MetricsView.Sliders)
            {
                <input class="custom-range range" type="range" min="0" max="100" name="metricimportance" id="@id" value="@averageValue" placeholder="Metrics" oninput="changeValues(this.value, @index)"
                onchange="changeValues(this.value, @index)" />
                <output class="bubble"></output>
            }
            @if (SystemParameters.MetricsView == MetricsView.TextBoxNumbers)
            {
            <input class="custom-range range" type="number" min="0" max="100" name="metricimportance" id="@id" value="@averageValue"  placeholder="Metrics" oninput="changeValues(this.value, @index)"
                   onchange="changeValues(this.value, @index)" />            
            }
            
        </div>
        index++;
    }
</div>

<script>
    /* Make sliders responsive to change of value */
    function getSumOfRangeValues() {
        let inputranges = document.getElementById("input-metrics-sliders-group").getElementsByTagName('input');
        let length = inputranges.length;
        let sum = 0;
        for (let i = 0; i < length; i++) {
            sum += parseInt(inputranges[i].value)
        }
        return sum;
    }
    function getRandomInt(max) {
        return Math.floor(Math.random() * max);
    }
    function changeValues(value, index) {
        let inputranges = document.getElementById("input-metrics-sliders-group").getElementsByTagName('input');
        let length = inputranges.length;
        let sum = getSumOfRangeValues();
        let overflow = sum - 100;
        if (overflow > 0) {
            for (let i = 0; i < length; i++) {
                if (i == index) continue;
                let current_value = parseInt(inputranges[i].value);
                let subtract = (overflow * current_value / 100) | 0;
                inputranges[i].value = current_value - subtract;
            }
            while (getSumOfRangeValues() > 100) {
                i = getRandomInt(length)
                if (i == index) continue;
                if (parseInt(inputranges[i].value) > 0) {
                    inputranges[i].value = parseInt(inputranges[i].value) - 1;
                }
            }
        }
        setBubbles();

    }

    /* #For showing values under sliders */
    function setBubbles() {
        const allRanges = document.querySelectorAll(".range-wrap");
        allRanges.forEach(wrap => {
            const range = wrap.querySelector(".range");
            const bubble = wrap.querySelector(".bubble");

            range.addEventListener("input", () => {
                setBubble(range, bubble);
            });
            setBubble(range, bubble);
        });
    }

    setBubbles();

    function setBubble(range, bubble) {
        const val = range.value;
        const min = range.min ? range.min : 0;
        const max = range.max ? range.max : 100;
        const newVal = Number(((val - min) * 100) / (max - min));
        bubble.innerHTML = val;

        // Sorta magic numbers based on size of the native UI thumb
        bubble.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;
    }
</script>