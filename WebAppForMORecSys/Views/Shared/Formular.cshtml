@model WebAppForMORecSys.Models.ViewModels.FormularViewModel
@using System.Text;
@using WebAppForMORecSys.Settings
@{
    ViewData["Title"] = "User study form";
    var QuestionIDs = Model.Questions.Select(q => q.Id).ToList();
    var SectionIDs = Model.Questions.Select(q => q.QuestionSectionID).Distinct().Order().ToList();
    string partString(string s)
    {
        StringBuilder sb = new StringBuilder();
        foreach (var part in s.Replace("\\n", "\n").Replace("\r","").Split('\n'))
        {
            sb.Append(part);
            sb.Append("<br />");
        }
        return sb.ToString();
    }
}

@if (!Model.UserStudyAllowed)
{
    <div class="card">
        <div class="card-body" style="background-color:red">
            <h3>You're not ready yet to answer user study questions.</h3>
            <br/>
            <h5>Please return on the <a href="@Url.Action("Index","Home")">main page</a> and follow the tips inside the orange box on top of the page.</h5>
            <h6>Thank you!</h6>
            @if (Model.NotDoneRequiredActsSuggestions.Count > 0)
            {
                <br />
                <br />
                <h5>All required acts you haven't done yet:</h5>
                <h6>
                    @Html.Raw(partString(Model.RequiredInformation))
                </h6>
                <ul>
                    @foreach (var suggestion in Model.NotDoneRequiredActsSuggestions)
                    {
                        <li>
                            <p>
                                @Html.Raw(partString(suggestion))
                            </p>
                        </li>
                        <br />
                    }
                </ul>
            }
            @if (Model.NotDoneNeededActsSuggestions.Count > 0)
            {
                <br />
                <br />
                <h5>You have to complete most of these groups of actions:</h5>
                <h6>
                    @Html.Raw(partString(Model.NeededInformation))
                </h6>
                <ul>
                    @foreach (var suggestion in Model.NotDoneNeededActsSuggestions)
                    {
                        <li>
                            <p>
                                @Html.Raw(partString(suggestion))
                            </p>
                        </li>
                        <br />
                    }
                </ul>
            }
        </div>
    </div>
}
else 
{

    <div id="userstudystart" style="@((Model.LastSectionID == -1) ? "display:none" : "")">
        You can start answering user study question by clicking on the 'Go to first section' button.
        <br>
        <br>
        <button type="button" onclick="changeSection(0)" style="float:right" class="btn btn-primary">Go to first section</button>
    </div>

    <div id="userstudyfinished" style="@((Model.LastSectionID == int.MaxValue) ? "display:none" : "")">
        <div id="questionslist">            
        </div>
        <h3>Thank you for participating in this user study!</h3>
        <br>
        <br>
        <button type="button" onclick="changeSection(@(SectionIDs.Count - 1))" style="" class="btn btn-primary">Last section</button>
        <br>
        <br>
        <button type="button" onclick="changeSection(0)" style="float:left" class="btn btn-warning">Go to first section</button>
    </div>

    <div id="userstudy" 
        style="@((Model.LastSectionID > 0) && (Model.LastSectionID < SectionIDs.Count) ? "" : "display:none")">
        <div class="card">
            <div class="card-body" style="background-color:orange">
                <p>There are @QuestionIDs.Count questions of @SectionIDs.Count sections you can answer.</p>
                <div id="sectionnumber"></div>
                <br/>
                <p>You can switch between the sections of questions by the buttons on the left and right side below the answers.</p>
            </div>
        </div>
        
        <div id="sectiondiv"> </div>
        <br>
        <button type="button" onclick="previousSection()" style="float:left" class="btn btn-primary">Previous section</button>
        <button type="button" onclick="nextSection()" style="float:right" class="btn btn-primary">Next section</button>
        <br />
        <br />
        <button type="button" onclick="changeSection(0)" style="float:left; margin-top:10px;" class="btn btn-warning">Go to first section</button>

    </div>
    
}
<script>
    var questionArray = @Html.Raw(Json.Serialize(QuestionIDs as List<int>));
    var sectionsArray = @Html.Raw(Json.Serialize(SectionIDs as List<int>));

    var currentIndex = @(SectionIDs.Contains(Model.LastSectionID) 
        ? SectionIDs.IndexOf(Model.LastSectionID)
        : Model.LastSectionID);

    changeSection(currentIndex);

    function changeSection(index) {
        if (index < 0) {
            $('#userstudy')[0].style.display = 'none';
            $('#userstudystart')[0].style.display = '';
            $('#userstudyfinished')[0].style.display = 'none';
            currentIndex = -1;
            window.scrollTo(0, 0);
        }
        else if (index >= sectionsArray.length) {

            $.ajax({
                url: '@Url.Action("ListOfQuestions","Home", new { onlyNotAnswered = true })',
                cache: false,
                success: function (data) {
                    $('#userstudy')[0].style.display = 'none';
                    $('#userstudystart')[0].style.display = 'none';
                    $('#userstudyfinished')[0].style.display = '';
                    if (data.includes('questiondiv')) {
                        data = '<h5>You still haven\'t answered these: </h5><br/>' + data;
                    }
                    $('#questionslist').html(data);
                    currentIndex = @int.MaxValue;
                    window.scrollTo(0, 0);
                    setImgTooltips();
                }
            });
        }
        else {
            $.ajax({
                url: '@Url.Action("ListOfQuestions","Home")' + '?sectionid=' + sectionsArray[index],
                cache: false,
                success: function (data) {
                    $('#userstudy')[0].style.display = '';
                    $('#sectiondiv').html(data);
                    $('#userstudystart')[0].style.display = 'none';
                    $('#userstudyfinished')[0].style.display = 'none';
                    $('#sectionnumber').html('<p>You are in section ' + (index + 1) + '</p>')
                    currentIndex = index;
                    window.scrollTo(0, 0);
                    setImgTooltips();
                }
            });
        }        
    }        
   

    function nextSection() {
        checkAnswersAndChangeSection(currentIndex + 1)
    }

    function previousSection() {
        changeSection(currentIndex - 1)
    }

    function checkAnswersAndChangeSection(index) {
        let displayedQuestions = $('#sectiondiv .questiondiv');
        let displayedQuestionIDs = [];
        for (let i = 0; i < displayedQuestions.length; i++) {
            displayedQuestionIDs.push(getQuestionIdFromQuestionDiv(displayedQuestions[i]));
        }
        $.ajax({
            url: '@Url.Action("GetNotAnsweredQuestions","Users")',
            cache: false,
            success: function (data) {
                let notAnswered = data;
                let allAnswered = true;
                for (let i = 0; i < displayedQuestionIDs.length; i++) {
                    if (notAnswered.includes(displayedQuestionIDs[i])) {
                        allAnswered = false;
                        displayedQuestions[i].style.color = 'red';
                        var debug = false;
                    }
                    else 
                    {
                        displayedQuestions[i].style.color = '';
                    }
                }
                if (allAnswered) {
                    changeSection(index);
                }
                else {
                    alert('You need to answer all questions!');
                }
            }
        });

    }
    
    function getQuestionIdFromQuestionDiv(element) {
        return parseInt(element.id.replace("question_", ""));
    }

    function saveTextAnswer(qid, textboxId) {
        text = $(textboxId)[0].value;
        if (text != '') {
            $.ajax({
                url: '@Url.Action("SaveAnswer","Home")/' + '?questionID=' + qid + '&text=' + encodeURIComponent(text),
                cache: false,
                success: function (data) {
                }
            });
        }
    }
    function saveValueAnswer(qid, value) {
        $.ajax({
            url: '@Url.Action("SaveAnswer","Home")/' + '?questionID=' + qid + '&value=' + value,
            cache: false,
            success: function (data) {
            }
        });
    }
    function saveOptionAnswer(qid, aid) {
        $.ajax({
            url: '@Url.Action("SaveAnswer","Home")/' + '?questionID=' + qid + '&answerID=' + aid,
            cache: false,
            success: function (data) {
            }
        });
    }
        
    function setImgTooltips() {

        var tooltips = $(".tooltip-with-img");
        for (let i = 0; i < tooltips.length; i++) {
            let img_id = tooltips[i].id.slice(0,-1) + 'img';
            let content = $('#' + img_id)[0].outerHTML;
            $('#' + tooltips[i].id).tooltip({ content: content });
        }
    }

</script>