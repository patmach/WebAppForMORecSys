@using static WebAppForMORecSys.Helpers.MovieHelper
@using static WebAppForMORecSys.Helpers.UserHelper
@model WebAppForMORecSys.Helpers.MovieHelper.PreviewDetailViewModel
@{
    string divId = "Detail_" + Model.item.Id;
    string aclass = Model.user != null ? "" : "disabled";
    string hideDisplay = "";
    string showDisplay = "none";
    string opacity = "1";
    if (Model.user?.IsItemInBlackList(Model.item.Id) ?? false)
    {
        hideDisplay = "none";
        showDisplay = "";
        opacity = "0.5";
    }
}
<div style="opacity:@opacity" class="@divId">
    <div>
        <button class=" btn btn-primary" onclick="BackToList();" style="float:right">Back to List</button>
        <h1>@Html.DisplayFor(model => model.item.Name)</h1>
    </div>
    <div>
        <a style="display:@hideDisplay;" class="hideimg" onclick="hide(@Model.item.Id)"
            href='@Url.Action("Hide","Movies", new { id=Model.item.Id })'>
            <img src="@Url.Content("~/Resources/Images/hide.png")" title="Don't recommend this movie" />
        </a>
        <a style="display:@showDisplay;" class="showimg" onclick="show(@Model.item.Id)"
            href='@Url.Action("Show","Movies", new { id=Model.item.Id })'>
            <img src="@Url.Content("~/Resources/Images/show.png")" title="Show movie again." />
        </a>
        <hr />
        <img class="ImageInDetail image"  src="@Model.item.ImageURL" />

        <dl class="InfoInDetail row">
             @if (Model.user!=null)
            {
                <dt class="col-sm-2">
                    My rating
                </dt>
                <dd class="col-sm-10">
                    @await Html.PartialAsync("../Movies/Rating", Model)
                </dd>
                <br/>
            }
            @if (!string.IsNullOrEmpty(Model.item.Description))
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.item.Description)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.item.Description)
                </dd>
                <br />
            }
            @if (Model.item.Genres.Length > 0)
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.item.Genres)
                </dt>
                <dd class="col-sm-10">
                    @for (int i = 0; i < Model.item.Genres.Length; i++)
                    {
                        @Html.DisplayFor(model => model.item.Genres[i])
                        string hideDisplayGenre = "";
                        string showDisplayGenre = "none";
                        string hideClassGenre = "hidegenre_" + i;
                        string showClassGenre = "showgenre_" + i;
                        if (Model.user?.IsGenreInBlackList(Model.item.Genres[i]) ?? false)
                        {
                            hideDisplayGenre = "none";
                            showDisplayGenre = "";                       
                        }
                        <a style="display:@hideDisplayGenre; left: 5px;" class="@hideClassGenre"
                           onclick="hide_by_property('genre',@i)"
                           href='@Url.Action("HideGenre","Movies", new { genre=Model.item.Genres[i] })'>
                            <img src="@Url.Content("~/Resources/Images/hide.png")" title="Don't recommend movies of this genre" />
                        </a>
                        <a style="display:@showDisplayGenre; left: 5px"
                           onclick="show_by_property('genre',@i)"
                        class="@showClassGenre" href='@Url.Action("ShowGenre","Movies", new { genre=Model.item.Genres[i] })'>
                            <img src="@Url.Content("~/Resources/Images/show.png")" title="Show movies of this genre again" />
                        </a>
                        <br />
                    }
                </dd>
            }
            @if (!string.IsNullOrEmpty(Model.item.ShortDescription))
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.item.ShortDescription)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.item.ShortDescription)
                </dd>
                <br />
            }
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.item.ReleaseDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.item.ReleaseDate.Date)
            </dd>      
            <br />
            @if (!string.IsNullOrEmpty(Model.item.Director))
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.item.Director)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.item.Director)
                    @{
                        string hideDisplayDirector = "";
                        string showDisplayDirector = "none";
                        string hideClassDirector = "hidedirector_";
                        string showClassDirector = "showdirector_";
                        if (Model.user?.IsDirectorInBlackList(Model.item.Director) ?? false)
                        {
                        hideDisplayDirector = "none";
                        showDisplayDirector = "";
                        }
                    }
                    <a style="display:@hideDisplayDirector; left: 5px" class="@hideClassDirector"
                       onclick="hide_by_property('director','')"
                       href='@Url.Action("HideDirector","Movies", new { director=Model.item.Director })'>
                        <img src="@Url.Content("~/Resources/Images/hide.png")" title="Don't recommend movies of this director" />
                    </a>
                    <a style="display:@showDisplayDirector;left: 5px"
                       onclick="show_by_property('director','')"
                       class="@showClassDirector" href='@Url.Action("ShowDirector","Movies", new { director=Model.item.Director })'>
                        <img src="@Url.Content("~/Resources/Images/show.png")" title="Show movies of this director again" />
                    </a>
                </dd>
                <br />
            }
            @if (Model.item.Actors.Length>0)
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.item.Actors)
                </dt>
                <dd class="col-sm-10">
                    @for (int i = 0; i < Model.item.Actors.Length; i++)
                    {
                        @Html.DisplayFor(model => model.item.Actors[i])
                        string hideDisplayActor = "";
                        string showDisplayActor = "none";
                        string hideClassActor = "hideactor_" + i;
                        string showClassActor = "showactor_" + i;
                        if (Model.user?.IsActorInBlackList(Model.item.Actors[i]) ?? false)
                        {
                            hideDisplayActor = "none";
                            showDisplayActor = "";
                        }
                        <a style="display:@hideDisplayActor; left: 5px;" class="@hideClassActor"
                           onclick="hide_by_property('actor',@i)"
                           href='@Url.Action("HideActor","Movies", new { actor=Model.item.Actors[i] })'>
                            <img src="@Url.Content("~/Resources/Images/hide.png")" title="Don't recommend movies with this actor" />
                        </a>
                        <a style="display:@showDisplayActor; left: 5px"
                           onclick="show_by_property('actor',@i)"
                           class="@showClassActor" href='@Url.Action("ShowActor","Movies", new { actor=Model.item.Actors[i] })'>
                            <img src="@Url.Content("~/Resources/Images/show.png")" title="Show movies with this actor again" />
                        </a>
                        <br/>
                    }                
                </dd>
                <br />
            }
      
        </dl>
    </div>

</div>


